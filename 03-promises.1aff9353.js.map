{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,kBAASC,EAAcC,EAAUC,GACTC,KAAKC,Q,CAwB7B,SAASJ,EAAcC,EAAUC,GAE/B,IAAMG,EAAgBF,KAAKC,SAAW,GACxB,IAAIE,SAAQ,SAACC,EAASC,GAClCC,YAAW,WACLJ,EACFE,EAAQ,uBAA2CG,OAAjBT,EAAU,QAAcS,OAAPR,EAAO,OAExDM,EAAK,sBAAwCE,OAAjBT,EAAU,QAAcS,OAAPR,EAAO,M,GAGvDA,E,IAGFS,MAAK,SAAAC,G,OAAUd,EAAAe,OAAOC,QAAQF,E,IAC9BG,OAAM,SAAAH,G,OAAUd,EAAAe,OAAOG,QAAQJ,E,IA9BvBK,SAASC,cAAc,SAE/BC,iBAAiB,SAAS,SAACC,GAC9BA,EAAIC,iBAOJ,IANA,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CtB,EAAwBoB,EAAxBpB,MAAOuB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEfC,EAAaC,OAAO1B,EAAM2B,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEzBG,EAAI,EAAGA,EAAID,EAAaC,IAC/BhC,EAAcgC,EAAI,EAAGL,EAAaK,EAAIF,E","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('click', (evt) => {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let i = 0; i < amountValue; i++) {\n    createPromise(i + 1, delayValue + i * stepValue);\n  }\n})\n\nfunction createPromise(position, delay) {\n  //  console.log(position, delay);\n  const shouldResolve = Math.random() > 0.3;\n  let promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${ position } in ${ delay }ms`)\n      } else {\n        reject(`❌ Rejected promise ${ position } in ${ delay }ms`)\n      }\n\n    }, delay);\n  })\n  promise\n    .then(result => Notify.success(result))\n    .catch(result => Notify.failure(result))\n\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","shouldResolve","Promise","resolve","reject","setTimeout","concat","then","result","Notify","success","catch","failure","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","step","amount","delayValue","Number","value","stepValue","amountValue","i"],"version":3,"file":"03-promises.1aff9353.js.map"}